
# there is an issue with fqdn at the point dns is not jet working...
# if bastion is done first this should not be an issue
# on the other hand: certs should refere to fqdn not ip addresses...
controller_host:     "aap-controller.bcl.redhat.hpecic.com"
#controller_host:     "10.6.55.2"
controller_username: "{{ vault_controller_username }}"
controller_password: "{{ vault_controller_password }}"
automationhub_host: "aap-privhub.bcl.redhat.hpecic.com"
#automationhub_host: "10.6.55.3"
automationhub_password: "{{ vault_controller_password }}"

organization_name: "BCL Organization"
ogranization_repository_credentials:
  - Automation Hub RH Certified Repository
  - Automation Hub Published Repository
  - Automation Hub Community Repository

# existing credentials:
# Automation Hub Community Repository      Ansible Galaxy/Automation Hub API Token
# Automation Hub Container Registry        Container Registry
# Automation Hub Published Repository      Ansible Galaxy/Automation Hub API Token
# Automation Hub RH Certified Repository   Ansible Galaxy/Automation Hub API Token

# ee creation
ees2create: 
  - bclov

bclov_ee:
   name: "BCL OV Execution Environment"
   description: "EE for BCL with OneView and VMware enabled" 
   organization: "{{ organization_name }}"
   image: "{{ automationhub_host }}/bcl-ov:latest"
   credential: "private automation hub registry"
   pull: "always"

# credential_types to create:
credtypes2create: 
  - rhsm

oneview_credential_type:
  name:  "HPE Oneview Credential Type"
  description: "HPE Oneview SDK Credential Type"
  inputs:   
    fields:
      - id: username
        type: string
        label: HPE Oneview username
      - id: password
        type: string
        label: HPE Oneview password
        secret: true
      - id: domain
        type: string
        label: HPE Oneview Domain
      - id: api_version
        type: string
        label: HPE Oneview Api version
    required:
      - username
      - password
      - domain
      - api_version
  injectors: 
    extra_vars:
      oneview_username: "{{'{{ username }}'}}"
      oneview_password: "{{'{{ password }}'}}"
      oneview_apiversion: "{{'{{ api_version }}'}}"
      oneview_domain: "{{'{{ domain }}'}}"
    env:
      ONEVIEWSDK_USERNAME: "{{'{{ username }}'}}"
      ONEVIEWSDK_PASSWORD: "{{'{{ password }}'}}"
      ONEVIEWSDK_API_VERSION: "{{'{{ api_version }}'}}"
      ONEVIEWSDK_DOMAIN: "{{'{{ domain }}'}}"

ilo_credential_type:
  name: "HPE ILO Credential Type"
  description: "HPE ILO SDK Credential Type"
  inputs:
    fields:
      - type: string
        id: username
        label: HPE ILO Username
      - type: string
        id: password
        label: HPE ILO Password
        secret: true
    required:
      - username
      - password
  injectors:
    env:
      ILO_USERNAME: "{{'{{ username }}'}}"
      ILO_PASSWORD: "{{'{{ password }}'}}"
    extra_vars:
      ilo_username: "{{'{{ username }}'}}"
      ilo_password: "{{'{{ password }}'}}"

esxi_credential_type:
  name: "ESXi root user Credential Type"
  description: "ESXi root user Credential Type"
  inputs:
    fields:
      - type: string
        id: username
        label: ESXi root Username
      - type: string
        id: password
        label: ESXi Password
        secret: True
    required:
      - username
      - password
  injectors:
    env:
      ESXI_USERNAME: "{{'{{ username }}'}}"
      ESXI_PASSWORD: "{{'{{ password }}'}}"
    extra_vars:
      esxi_username: "{{'{{ username }}'}}"
      esxi_password: "{{'{{ password }}'}}"
      esxi_rootpw: "{{'{{ password }}'}}"

rhsm_credential_type:
  name: "RH System Manager Credential Type"
  description: "RH System Manager Credential Type"
  inputs:
    fields:
      - type: string
        id: username
        label: RH Account Username
      - type: string
        id: password
        label: RH Account Password
        secret: True
    required:
      - username
      - password
  injectors:
    env:
      RHSM_USERNAME: "{{'{{ username }}'}}"
      RHSM_PASSWORD: "{{'{{ password }}'}}"
    extra_vars:
      rhsm_username: "{{'{{ username }}'}}"
      rhsm_password: "{{'{{ password }}'}}"

# credentials to create:
credentials2create:
  - vcenter
  - bastion
  - controller
  - winvm
  - rhelvm
  - rhsm
  - esximachine

controller_credential:
  name: "Login to AAP Controler itself"
  description: "login to AAP Controller via API"
  type: "Red Hat Ansible Automation Platform"
  organization: "{{ organization_name }}"
  inputs:
    host: "{{ vault_controller_controller }}"
    username: "{{ vault_controller_username }}"
    password: "{{ vault_controller_password }}"
    oaut_token: "{{ vault_controller_oauthtoken | default(omit) }}"
    verify_ssl: false

bastion_credential:
  name: "Login to Bastion Host"
  description: "login to bastion host via ssh"
  type: "Machine"
  organization: "{{ organization_name }}"
  inputs:
    username: "{{ vault_bastion_username }}"
    password: "{{ vault_bastion_password   | default(omit) }}"
    ssh_key_data: "{{ vault_bastion_sshkey | default(omit) }}"

oneview_credential:
  name: "HPE Oneview Credential"
  description: "HPE Oneview SDK Credential"
  type: "{{ oneview_credential_type.name }}"
  organization: "{{ organization_name }}"
  inputs:
    username: "{{ vault_oneview_username }}"
    password: "{{ vault_oneview_password }}"
    domain: "{{ vault_oneview_domain }}"
    api_version: "{{ vault_oneview_apiversion }}"

ilo_credential:
  name: "HPE ILO Credential"
  description: "HPE ILO SDK Credential"
  type: "{{ ilo_credential_type.name }}"
  organization: "{{ organization_name }}"
  inputs: 
    username: "{{ vault_ilo_username }}"
    password: "{{ vault_ilo_password }}"

esxi_credential:
  name: "ESXi Credential"
  description: "ESXi Credential"
  type: "{{ esxi_credential_type.name }}"
  organization: "{{ organization_name }}"
  inputs:
    username: "root"
    password: "{{ vault_esxi_rootpw }}"

esximachine_credential:
  name: "ESXi Machine Credential"
  description: "ESXi Machine Credential"
  type: "Machine"
  organization: "{{ organization_name }}"
  inputs:
    username: "root"
    password: "{{ vault_esxi_rootpw }}"
    ssh_key_data: "{{ vault_esxi_sshkey | default(omit) }}"
    become_password: "{{ vault_esxi_becomepassword | default(omit) }}"

vcenter_credential:
  name: "BCL VCenter"
  description: "BCL VCenter Credential"
  type: "VMware vCenter"
  organization: "{{ organization_name }}"
  inputs: 
    host: "10.6.55.10"
    username: "{{ vault_vcenter_username }}"
    password: "{{ vault_vcenter_password }}"

winvm_credential:
  name: "Login to Windows VMs"
  description: "login to Windows VMs of UC2"
  type: "Machine"
  organization: "{{ organization_name }}"
  inputs:
    username: "{{ vault_winvm_username }}"
    password: "{{ vault_winvm_password   | default(omit) }}"

rhelvm_credential:
  name: "Login to RHEL VMs"
  description: "login to RHEL VMs of UC2"
  type: "Machine"
  organization: "{{ organization_name }}"
  inputs:
    username: "{{ vault_rhelvm_username }}"
    password: "{{ vault_rhelvm_password   | default(omit) }}"
    ssh_key_data: "{{ vault_rhelvm_sshkey | default(omit) }}"
    become_password: "{{ vault_rhelvm_becomepassword | default(omit) }}"

rhsm_credential:
  name: "RH Subscription Manager"
  description: "Register Subscritpion Manager to CDN"
  type: "{{ rhsm_credential_type.name }}"
  organization: "{{ organization_name }}"
  inputs:
    username: "{{ vault_rhsm_username }}"
    password: "{{ vault_rhsm_password }}"

# projects to create
projects2create:
  - "uc3"

uc3_project:
  name: "BCL Project UC3"
  description: "BCL Project for UC3"
  organization: "{{ organization_name }}"
  scm_type: "git"
  scm_url: "https://github.com/Red-Hat-EMEA-Portfolio-SSA/bcluc3.git"
  #scm_credential: "{{ vault_githubtoken }}"
  ee_name: "{{ bclov_ee.name }}"

  # scm_branch: ""
  # scm_clean: true
  # scm_delete_on_update: false
  # scm_refspec: ""
  # scm_track_submodules: false
  # scm_upodate_cache_timeout: 50
  # scm_update_on_launch: false
  # update_project: false

inventories2create:
  - "bcl"

bcl_inventory:
  name: "BCL Inventory"
  description: "BCL Inventory"
  organization: "{{ organization_name }}"
  hosts:
    - name: localhost
      # see: https://docs.ansible.com/ansible/latest/inventory/implicit_localhost.html
      ansible_connection: local
      ansible_python_interpreter: "{{ansible_playbook_python}}"
      groups: []
    - name: bastion_host 
      host_ip: "10.6.55.4"
      groups:
        - bastion
        - rhel
    - name: aap-controller
      host_ip: "10.6.55.2"
      groups:
        - controller
        - rhel
    - name: aap-privhub
      host_ip: "10.6.55.3"
      groups:
        - privhub
        - rhel

    - name: oneview_host 
      host_ip: oneview.bcl.redhat.hpecic.com
      groups: []
    - name: rh-bctl-1-gen9
      ilo_ip:  "10.6.55.201"
      host_ip: "10.6.54.201"
      host_nic: vmnic4
      host_bootproto: 'static'
      host_mask: "255.255.255.0"
      host_gw: "10.6.54.1"
      host_nameserver: "10.6.55.4"
      oneview_host: "10.6.55.9"
      groups:
        - "esx_hosts"
      ov_hardware: "rh-bctl-1-gen9.hpintelco.org"
      ov_hostname: "rh-bctl-1-gen9"
      server_hardware_type_name: "DL380 Gen9"
      ov_spp_name: "Service Pack for ProLiant"
    - name: rh-bctl-2-gen9
      ilo_ip:  "10.6.55.202"
      host_ip: "10.6.54.202"
      host_nic: vmnic4
      host_bootproto: 'static'
      host_mask: "255.255.255.0"
      host_gw: "10.6.54.1"
      host_nameserver: "10.6.55.4"
      oneview_host: "10.6.55.9"
      groups:
        - "esx_hosts"
      ov_hardware: "rh-bctl-2-gen9.hpintelco.org"
      ov_hostname: "rh-bctl-2-gen9"
      server_hardware_type_name: "DL380 Gen9"
      ov_spp_name: "Service Pack for ProLiant"
    - name: rh-bctl-3-gen9
      ilo_ip:  "10.6.55.203"
      host_ip: "10.6.54.203"
      host_nic: vmnic4
      host_bootproto: 'static'
      host_mask: "255.255.255.0"
      host_gw: "10.6.54.1"
      host_nameserver: "10.6.55.4"
      oneview_host: "10.6.55.9"
      groups:
        - "esx_hosts"
      ov_hardware: "rh-bctl-3-gen9.hpintelco.org"
      ov_hostname: "rh-bctl-3-gen9"
      server_hardware_type_name: "DL380 Gen9"
      ov_spp_name: "Service Pack for ProLiant"
#    - name: rh-bctl-4-gen9
#      ilo_ip:  "10.6.55.204"
#      host_ip: "10.6.54.204"
#      host_nic: vmnic4
#      host_bootproto: 'static'
#      host_mask: "255.255.255.0"
#      host_gw: "10.6.54.1"
#      host_nameserver: "10.6.55.4"
#      oneview_host: "10.6.55.9"
#      groups:
#        - "esx_hosts"
#      ov_hardware: "rh-bctl-4-gen9.hpintelco.org"
#      ov_hostname: "rh-bctl-4-gen9"
#      server_hardware_type_name: "DL380 Gen9"
#      ov_spp_name: "Service Pack for ProLiant"
    - name: rh-bctl-5-gen10
      ilo_ip:  "10.6.55.205"
      host_ip: "10.6.54.205"
      host_nic: vmnic4
      host_bootproto: 'static'
      host_mask: "255.255.255.0"
      host_gw: "10.6.54.1"
      host_nameserver: "10.6.55.4"
      oneview_host: "10.6.55.9"
      groups:
        - "uc1_targets"
        - "uc3_targets"
      ov_hardware: "rh-bctl-5-gen10.hpintelco.org"
      ov_hostname: "rh-bctl-5-gen10"
      server_hardware_type_name: "DL380 Gen10"
      ov_spp_name: "Gen10 Service Pack for ProLiant"
    - name:  "vcenter"
      host_ip: '10.6.55.10'
      groups: []
  groups:
    - "bastion"
    - "controller"
    - "privhub"
    - "rhel"
    - "esx_hosts"
    - "uc1_targets"
    - "uc3_targets"

# workflow templates to create
workflows2create:
  - "uc3guestsecupdate"
  - "uc3firmwareupdate"
  - "uc3updateesxi"

uc3guestsecupdate_workflowtemplate:
  name: "UC3 - Security Updates for Guest OS"
  description: "Update RHEL or Win VMs with security updates"
  organization: "{{ organization_name }}"
  inventory:    "{{ bcl_inventory.name }}"
  # extravars: {}

uc3firmwareupdate_workflowtemplate:
  name: "UC3 - firmware updates"
  description: "check firmware status, apply updates and check firmware compliance"
  organization: "{{ organization_name }}"
  inventory:    "{{ bcl_inventory.name }}"
  # extravars: {}

uc3updateesxi_workflowtemplate:
  name: "UC3 - update ESXi"
  description: "install udpdate via esxcli command and reboot"
  organization: "{{ organization_name }}"
  inventory:    "{{ bcl_inventory.name }}"
  extravars: 
    my_vmware_datacenter_name: bcl
    my_vmware_cluster_name: bcl-cluster
    #my_esxi_package: "ESXi-7.0U2a-17867351-standard"
    my_esxi_package: "ESXi-7.0U3n-21930508-standard"

uc3firmwareupdate_jobtemplates:
  - name:         "uc3 Check Firmware compliance via API calls"
    description:  "Use Oneview API to check compliance state of firmware"
    organization: "{{ organization_name }}"
    inventory:    "{{ bcl_inventory.name }}"
    project:      "{{ uc3_project.name }}"
    playbook:     "1c_firmware_compliance.yml"
    credentials:  
      - "{{ oneview_credential.name }}"
    become: true
    ee_name: "{{ bclov_ee.name }}"
    verbosity:    0
    workflow_member: true
    workflow: "{{ uc3firmwareupdate_workflowtemplate.name }}"
    identifier: "fw_compliance"
    #always_nodes: []
    #failure_nodes: []
    #success_nodes: []

  - name:         "uc3 Apply FW update via Oneview"
    description:  "Update server profile template to ensure FW update"
    organization: "{{ organization_name }}"
    inventory:    "{{ bcl_inventory.name }}"
    project:      "{{ uc3_project.name }}"
    playbook:     "1b_oneview_apply_spp.yml"
    credentials:  
      - "{{ oneview_credential.name }}"
    become: true
    ee_name: "{{ bclov_ee.name }}"
    verbosity:    0
    workflow_member: true
    workflow: "{{ uc3firmwareupdate_workflowtemplate.name }}"
    identifier: "oneview_applyfw"
    always_nodes:
      - "fw_compliance"
    #failure_nodes: []
    #success_nodes: []
  
  - name:         "uc3 Check Firmware via Oneview"
    description:  "Print firmware versions of all components of your hardware"
    organization: "{{ organization_name }}"
    inventory:    "{{ bcl_inventory.name }}"
    project:      "{{ uc3_project.name }}"
    playbook:     "1a_oneview_check_firmware.yml"
    credentials:  
      - "{{ oneview_credential.name }}"
    become: true
    ee_name: "{{ bclov_ee.name }}"
    verbosity:    0
    workflow_member: true
    workflow: "{{ uc3firmwareupdate_workflowtemplate.name }}"
    identifier: "oneview_checkfw"
    always_nodes:
      - "oneview_applyfw"
    #failure_nodes: []
    #success_nodes: []

uc3updateesxi_jobtemplates:
  - name:         "uc3 Update ESXi hosts"
    description:  "set in maintanance, update, reboot, one at a time" 
    organization: "{{ organization_name }}"
    inventory:    "{{ bcl_inventory.name }}"
    project:      "{{ uc3_project.name }}"
    playbook:     "2_update_esxi.yml"
    credentials:  
      - "{{ vcenter_credential.name }}"
      - "{{ esximachine_credential.name }}"
    become: true
    ee_name: "{{ bclov_ee.name }}"
    verbosity:    0
    workflow_member: true
    workflow: "{{ uc3updateesxi_workflowtemplate.name }}"
    identifier: "update_esxi"
    #always_nodes: []
    #failure_nodes: []
    #success_nodes: []

uc3guestsecupdate_jobtemplates:
  - name:         "uc3 Security Updates for RHEL guest VMs"
    description:  "Install security updates to RHEL and Windows Clients"
    organization: "{{ organization_name }}"
    inventory:    "{{ bcl_inventory.name }}"
    project:      "{{ uc3_project.name }}"
    playbook:     "3_guest_security_updates.yml"
    limit: "rhel9_64Guest"
    credentials:  
      - "{{ rhelvm_credential.name }}"
    become: true
    ee_name: "{{ bclov_ee.name }}"
    verbosity:    0
    workflow_member: true
    workflow: "{{ uc3guestsecupdate_workflowtemplate.name }}"
    identifier: "update_rhelvms"
    #always_nodes: []
    #failure_nodes: []
    #success_nodes: []

  - name:         "uc3 Security Updates for WIN guest VMs"
    description:  "Install security updates to RHEL and Windows Clients"
    organization: "{{ organization_name }}"
    inventory:    "{{ bcl_inventory.name }}"
    project:      "{{ uc3_project.name }}"
    playbook:     "3_guest_security_updates.yml"
    limit: "windows2019srv_64Guest"
    credentials:  
      - "{{ winvm_credential.name }}"
    become: false
    ee_name: "{{ bclov_ee.name }}"
    verbosity:    0
    workflow_member: true
    workflow: "{{ uc3guestsecupdate_workflowtemplate.name }}"
    identifier: "update_winvms"
    #always_nodes: []
    #failure_nodes: []
    #success_nodes: []
